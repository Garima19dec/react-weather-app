{"version":3,"sources":["modules/CityComponent.js","modules/WeatherInfoComponent.js","Apps.js","index.js"],"names":["SearchBox","styled","form","ChooseCityLabel","span","WelcomeWeatherLogo","img","CityComponent","props","updateCity","fetchWeather","src","onSubmit","onChange","e","target","value","placeholder","type","WeatherInfoIcons","sunset","sunrise","humidity","wind","pressure","Location","Condition","WeatherInfoLabel","WeatherIcon","WeatherContainer","div","WeatherInfoContainer","InfoContainer","InfoIcon","InfoLabel","WeatherInfoComponent","name","WeatherComponent","timeStamp","weather","isDay","current","condition","icon","includes","temp_c","text","location","country","is_day","Date","getHours","getMinutes","wind_kph","pressure_mb","Container","AppLabel","Apps","useState","city","updateWeather","a","preventDefault","Axios","get","response","console","log","data","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.a90b1d7c.chunk.js","sourcesContent":["import styled from \"styled-components\";\nimport React from \"react\";\n\nconst SearchBox = styled.form`\n  display: flex;\n  flex-direction: row;\n  justify-content: space-evenly;\n  margin: 20px;\n  border: black solid 1px;\n  border-radius: 2px;\n\n  & input {\n    padding: 10px;\n    font-size: 14px;\n    border: none;\n    outline: none;\n    font-family: Montserrat;\n    font-weight: bold;\n  }\n  & button {\n    background-color: black;\n    font-size: 14px;\n    padding: 0 10px;\n    color: white;\n    border: none;\n    outline: none;\n    cursor: pointer;\n    font-family: Montserrat;\n    font-weight: bold;\n  }\n`;\nconst ChooseCityLabel = styled.span`\n  color: black;\n  margin: 10px auto;\n  font-size: 18px;\n  font-weight: bold;\n`;\nconst WelcomeWeatherLogo = styled.img`\n  width: 140px;\n  height: 140px;\n  margin: 40px auto;\n`;\nconst CityComponent = (props) => {\n  const { updateCity, fetchWeather } = props;\n  return (\n    <>\n      <WelcomeWeatherLogo src={\"/react-weather-app/icons/perfect-day.svg\"} />\n      <ChooseCityLabel>Find Weather of your city</ChooseCityLabel>\n      <SearchBox onSubmit={fetchWeather}>\n        <input\n          onChange={(e) => updateCity(e.target.value)}\n          placeholder=\"City\"\n        />\n        <button type={\"submit\"}>Search</button>\n      </SearchBox>\n    </>\n  );\n};\nexport default CityComponent;\n","import React from \"react\";\nimport styled from \"styled-components\";\nimport {WeatherIcons} from \"../Apps\";\n\nexport const WeatherInfoIcons = {\n    sunset: \"/react-weather-app/icons/temp.svg\",\n    sunrise: \"/react-weather-app/icons/temp.svg\",\n    humidity: \"/react-weather-app/icons/humidity.svg\",\n    wind: \"/react-weather-app/icons/wind.svg\",\n    pressure: \"/react-weather-app/icons/pressure.svg\",\n};\nconst Location = styled.span`\n  margin: 15px auto;\n  text-transform: capitalize;\n  font-size: 28px;\n  font-weight: bold;\n`;\nconst Condition = styled.span`\n  margin: 20px auto;\n  text-transform: capitalize;\n  font-size: 14px;\n  & span {\n    font-size: 28px;\n  }\n`;\nconst WeatherInfoLabel = styled.span`\n  margin: 20px 25px 10px;\n  text-transform: capitalize;\n  text-align: start;\n  width: 90%;\n  font-weight: bold;\n  font-size: 14px;\n`;\nconst WeatherIcon = styled.img`\n  width: 100px;\n  height: 100px;\n  margin: 5px auto;\n`;\nconst WeatherContainer = styled.div`\n  display: flex;\n  width: 100%;\n  margin: 30px auto;\n  flex-direction: row;\n  justify-content: space-between;\n  align-items: center;\n`;\n\nconst WeatherInfoContainer = styled.div`\n  display: flex;\n  width: 90%;\n  flex-direction: row;\n  justify-content: space-evenly;\n  align-items: center;\n  flex-wrap: wrap;\n`;\nconst InfoContainer = styled.div`\n  display: flex;\n  margin: 5px 10px;\n  flex-direction: row;\n  justify-content: space-evenly;\n  align-items: center;\n`;\nconst InfoIcon = styled.img`\n  width: 36px;\n  height: 36px;\n`;\nconst InfoLabel = styled.span`\n  display: flex;\n  flex-direction: column;\n  font-size: 14px;\n  margin: 15px;\n  & span {\n    font-size: 12px;\n    text-transform: capitalize;\n  }\n`;\n\nconst WeatherInfoComponent = (props) => {\n    const {name, value} = props;\n    return (\n        <InfoContainer>\n            <InfoIcon src={WeatherInfoIcons[name]}/>\n            <InfoLabel>\n                {value}\n                <span>{name}</span>\n            </InfoLabel>\n        </InfoContainer>\n    );\n};\nconst WeatherComponent = (props) => {\n    const {weather} = props;\n    //const isDay = weather?.current?.condition[0]?.icon;\n    const isDay = weather?.current?.condition?.icon?.includes(\"d\");\n    const getTime = (timeStamp) => {\n        return `${new Date(timeStamp * 1000).getHours()} : ${new Date(timeStamp * 1000).getMinutes()}`\n    }\n    return (\n      <>\n        <WeatherContainer>\n          <Condition>\n            <span>{`${weather?.current?.temp_c}Â°C`}</span>\n            {`  |  ${weather?.current?.condition?.text}`}\n          </Condition>\n          {/* <WeatherIcon src={WeatherIcons[weather?.current?.condition?.icon]} /> */}\n          <WeatherIcon src={`${weather?.current?.condition?.icon}`} />\n        </WeatherContainer>\n        <Location>{`${weather?.location?.name}, ${weather?.location?.country}`}</Location>\n\n        <WeatherInfoLabel>Weather Info</WeatherInfoLabel>\n        <WeatherInfoContainer>\n          <WeatherInfoComponent\n            name={isDay ? \"sunset\" : \"sunrise\"}\n            value={`${getTime(weather?.current?.is_day)}`}\n          />\n          <WeatherInfoComponent\n            name={\"humidity\"}\n            value={weather?.current?.humidity}\n          />\n          <WeatherInfoComponent\n            name={\"wind\"}\n            value={weather?.current?.wind_kph}\n          />\n          <WeatherInfoComponent\n            name={\"pressure\"}\n            value={weather?.current?.pressure_mb}\n          />\n        </WeatherInfoContainer>\n      </>\n    );\n};\n\nexport default WeatherComponent;\n","import React, { useState } from \"react\";\nimport styled from \"styled-components\";\nimport Axios from \"axios\";\nimport CityComponent from \"./modules/CityComponent\";\nimport WeatherComponent from \"./modules/WeatherInfoComponent\";\n\nexport const WeatherIcons = {\n  \"01d\": \"/react-weather-app/icons/sunny.svg\",\n  \"01n\": \"/react-weather-app/icons/night.svg\",\n  \"02d\": \"/react-weather-app/icons/day.svg\",\n  \"02n\": \"/react-weather-app/icons/cloudy-night.svg\",\n  \"03d\": \"/react-weather-app/icons/cloudy.svg\",\n  \"03n\": \"/react-weather-app/icons/cloudy.svg\",\n  \"04d\": \"/react-weather-app/icons/perfect-day.svg\",\n  \"04n\": \"/react-weather-app/icons/cloudy-night.svg\",\n  \"09d\": \"/react-weather-app/icons/rain.svg\",\n  \"09n\": \"/react-weather-app/icons/rain-night.svg\",\n  \"10d\": \"/react-weather-app/icons/rain.svg\",\n  \"10n\": \"/react-weather-app/icons/rain-night.svg\",\n  \"11d\": \"/react-weather-app/icons/storm.svg\",\n  \"11n\": \"/react-weather-app/icons/storm.svg\",\n};\n\nconst Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  align-items: center;\n  width: 380px;\n  padding: 20px 10px;\n  margin: auto;\n  border-radius: 4px;\n  box-shadow: 0 3px 6px 0 #555;\n  background: white;\n  font-family: Montserrat;\n`;\n\nconst AppLabel = styled.span`\n  color: black;\n  margin: 20px auto;\n  font-size: 18px;\n  font-weight: bold;\n`;\nconst CloseButton = styled.span`\n  padding: 2px 3px;\n  background-color: black;\n  border-radius: 50%;\n  color: white;\n  position: absolute;\n`;\n\nfunction Apps() {\n  const [city, updateCity] = useState();\n  const [weather, updateWeather] = useState();\n  const fetchWeather = async (e) => {\n    e.preventDefault();\n    const response = await Axios.get(\n      // `https://api.openweathermap.org/data/2.5/weather?q=${city}&appid=fe4feefa8543e06d4f3c66d92c61b69c`,\n      `http://api.weatherapi.com/v1/current.json?key=c8d8bfe6b5ee4ce3be7111129220604&q=${city}&aqi=no`\n    );\n    console.log(response.data);\n    updateWeather(response.data);\n  };\n  return (\n    <Container>\n      <AppLabel>React Weather App</AppLabel>\n      {city && weather ? (\n        <WeatherComponent weather={weather} city={city} />\n      ) : (\n        <CityComponent updateCity={updateCity} fetchWeather={fetchWeather} />\n      )}\n    </Container>\n  );\n}\n\nexport default Apps;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Apps from \"./Apps\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <Apps />,\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}